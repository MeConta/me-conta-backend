name: CICD - Backend - GCP
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Build
        run: npm run build
      - name: Unit Tests
        run: npm run test:cov
      - name: E2E Tests
        run: | 
          cp .env .env.test
          npm run test:e2e
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-dev:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    environment:
      name: DEV
      url: ${{ steps.deploy.outputs.url }}
    env:
      IMAGE_TAG: us-central1-docker.pkg.dev/me-conta-dev-38ef/me-conta/me-conta-backend:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install dependencies
        uses: bahmutov/npm-install@v1
      - name: Build
        run: npm run build
      - name: Perform migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: production
        run: npm run typeorm:migration:run

      - name: Build docker image
        env:
          NODE_ENV: production
        run: docker build . -f Dockerfile -t $IMAGE_TAG --build-arg $NODE_ENV
      - id: 'auth'
        name: Authenticate on GCP
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/615687411435/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
          service_account: 'github-actions-service-account@me-conta-dev-38ef.iam.gserviceaccount.com'
      - name: Configure docker client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: Push Docker image to registry
        run: docker push $IMAGE_TAG
      - id: deploy
        name: Deploy on Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          region: us-central1
          service: 'me-conta-backend'
          image: ${{ env.IMAGE_TAG }}
      - name: google-chat-notification
        uses: Co-qn/google-chat-notification@v1
        if: failure()
        with:
          name: Deploy Dev Failure
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}

  deploy-hml:
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs: deploy-dev
    environment: HML
    steps:
      - name: test
        run: echo 'deploy on hml'

  deploy-prd:
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs: deploy-hml
    environment: PRD
    steps:
      - name: test
        run: echo 'deploy on prd'